// <auto-generated />
using System;
using CalCalculatorDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalCalculatorDAL.Migrations
{
    [DbContext(typeof(CalCalculateDB))]
    [Migration("20230204184642_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CalCalculatorEntities.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<int>("FoodCal")
                        .HasColumnType("int");

                    b.Property<int>("FoodCarb")
                        .HasColumnType("int");

                    b.Property<int>("FoodFat")
                        .HasColumnType("int");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodProt")
                        .HasColumnType("int");

                    b.HasKey("FoodID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("CalCalculatorEntities.FoodMeal", b =>
                {
                    b.Property<int>("FoodMealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodMealID"), 1L, 1);

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<int>("MealID")
                        .HasColumnType("int");

                    b.HasKey("FoodMealID");

                    b.HasIndex("FoodID");

                    b.HasIndex("MealID");

                    b.ToTable("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"), 1L, 1);

                    b.Property<int>("ContactUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsersUserID")
                        .HasColumnType("int");

                    b.HasKey("MealID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CalCalculatorEntities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CalCalculatorEntities.FoodMeal", b =>
                {
                    b.HasOne("CalCalculatorEntities.Food", "Food")
                        .WithMany("FoodMeals")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalCalculatorEntities.Meal", "Meal")
                        .WithMany("FoodMeals")
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.HasOne("CalCalculatorEntities.User", "Users")
                        .WithMany("Meals")
                        .HasForeignKey("UsersUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CalCalculatorEntities.Food", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.User", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
