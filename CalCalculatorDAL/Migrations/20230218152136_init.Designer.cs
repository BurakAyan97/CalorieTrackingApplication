// <auto-generated />
using System;
using CalCalculatorDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalCalculatorDAL.Migrations
{
    [DbContext(typeof(CalCalculateDB))]
    [Migration("20230218152136_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CalCalculatorEntities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Desserts"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Drinks"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Sea Foods"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Pastries"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Fast Foods"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Fruits"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Vegetable"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Kebabs"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Legumes"
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "Salads"
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "Breakfast Foods"
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "Bakery"
                        });
                });

            modelBuilder.Entity("CalCalculatorEntities.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("FoodCal")
                        .HasColumnType("float");

                    b.Property<int>("FoodCarb")
                        .HasColumnType("int");

                    b.Property<int>("FoodFat")
                        .HasColumnType("int");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodProt")
                        .HasColumnType("int");

                    b.HasKey("FoodID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodID = 1,
                            CategoryId = 2,
                            FoodCal = 37.0,
                            FoodCarb = 10,
                            FoodFat = 0,
                            FoodName = "Cola",
                            FoodProt = 0
                        },
                        new
                        {
                            FoodID = 2,
                            CategoryId = 2,
                            FoodCal = 54.0,
                            FoodCarb = 13,
                            FoodFat = 0,
                            FoodName = "Juice",
                            FoodProt = 0
                        },
                        new
                        {
                            FoodID = 3,
                            CategoryId = 2,
                            FoodCal = 1.0,
                            FoodCarb = 0,
                            FoodFat = 0,
                            FoodName = "Tea",
                            FoodProt = 0
                        },
                        new
                        {
                            FoodID = 4,
                            CategoryId = 2,
                            FoodCal = 1.0,
                            FoodCarb = 0,
                            FoodFat = 0,
                            FoodName = "Coffee",
                            FoodProt = 0
                        },
                        new
                        {
                            FoodID = 5,
                            CategoryId = 1,
                            FoodCal = 359.0,
                            FoodCarb = 90,
                            FoodFat = 0,
                            FoodName = "Turkish Delight",
                            FoodProt = 0
                        },
                        new
                        {
                            FoodID = 6,
                            CategoryId = 1,
                            FoodCal = 428.0,
                            FoodCarb = 38,
                            FoodFat = 29,
                            FoodName = "Baklava",
                            FoodProt = 7
                        },
                        new
                        {
                            FoodID = 7,
                            CategoryId = 3,
                            FoodCal = 216.0,
                            FoodCarb = 0,
                            FoodFat = 15,
                            FoodName = "Bonito",
                            FoodProt = 20
                        },
                        new
                        {
                            FoodID = 8,
                            CategoryId = 3,
                            FoodCal = 124.0,
                            FoodCarb = 0,
                            FoodFat = 3,
                            FoodName = "Red Mullet",
                            FoodProt = 20
                        },
                        new
                        {
                            FoodID = 9,
                            CategoryId = 3,
                            FoodCal = 96.0,
                            FoodCarb = 0,
                            FoodFat = 2,
                            FoodName = "Bream",
                            FoodProt = 20
                        },
                        new
                        {
                            FoodID = 10,
                            CategoryId = 4,
                            FoodCal = 385.0,
                            FoodCarb = 27,
                            FoodFat = 29,
                            FoodName = "Chocolate Cake",
                            FoodProt = 5
                        },
                        new
                        {
                            FoodID = 11,
                            CategoryId = 4,
                            FoodCal = 172.0,
                            FoodCarb = 27,
                            FoodFat = 5,
                            FoodName = "Fruit Cake",
                            FoodProt = 4
                        },
                        new
                        {
                            FoodID = 12,
                            CategoryId = 5,
                            FoodCal = 165.0,
                            FoodCarb = 20,
                            FoodFat = 6,
                            FoodName = "Burger",
                            FoodProt = 7
                        },
                        new
                        {
                            FoodID = 13,
                            CategoryId = 5,
                            FoodCal = 186.0,
                            FoodCarb = 31,
                            FoodFat = 5,
                            FoodName = "Pizza",
                            FoodProt = 6
                        },
                        new
                        {
                            FoodID = 14,
                            CategoryId = 6,
                            FoodCal = 56.0,
                            FoodCarb = 14,
                            FoodFat = 1,
                            FoodName = "Apple",
                            FoodProt = 1
                        },
                        new
                        {
                            FoodID = 15,
                            CategoryId = 6,
                            FoodCal = 28.0,
                            FoodCarb = 7,
                            FoodFat = 1,
                            FoodName = "Melon",
                            FoodProt = 1
                        },
                        new
                        {
                            FoodID = 16,
                            CategoryId = 7,
                            FoodCal = 24.0,
                            FoodCarb = 5,
                            FoodFat = 2,
                            FoodName = "Cauliflower",
                            FoodProt = 1
                        },
                        new
                        {
                            FoodID = 17,
                            CategoryId = 7,
                            FoodCal = 53.0,
                            FoodCarb = 12,
                            FoodFat = 1,
                            FoodName = "Cauliflower",
                            FoodProt = 2
                        },
                        new
                        {
                            FoodID = 18,
                            CategoryId = 8,
                            FoodCal = 539.0,
                            FoodCarb = 57,
                            FoodFat = 35,
                            FoodName = "Corn Chips",
                            FoodProt = 7
                        },
                        new
                        {
                            FoodID = 19,
                            CategoryId = 8,
                            FoodCal = 532.0,
                            FoodCarb = 8,
                            FoodFat = 56,
                            FoodName = "Corn Chips",
                            FoodProt = 1
                        },
                        new
                        {
                            FoodID = 20,
                            CategoryId = 9,
                            FoodCal = 239.0,
                            FoodCarb = 1,
                            FoodFat = 20,
                            FoodName = "Adana Kebab",
                            FoodProt = 14
                        },
                        new
                        {
                            FoodID = 21,
                            CategoryId = 9,
                            FoodCal = 151.0,
                            FoodCarb = 16,
                            FoodFat = 6,
                            FoodName = "Iskender Kebab",
                            FoodProt = 10
                        },
                        new
                        {
                            FoodID = 22,
                            CategoryId = 11,
                            FoodCal = 54.0,
                            FoodCarb = 5,
                            FoodFat = 4,
                            FoodName = "Iceberg Lettuce Salad",
                            FoodProt = 1
                        },
                        new
                        {
                            FoodID = 23,
                            CategoryId = 11,
                            FoodCal = 128.0,
                            FoodCarb = 7,
                            FoodFat = 5,
                            FoodName = "Caesar Salad",
                            FoodProt = 14
                        },
                        new
                        {
                            FoodID = 24,
                            CategoryId = 12,
                            FoodCal = 310.0,
                            FoodCarb = 3,
                            FoodFat = 25,
                            FoodName = "Feta Cheese",
                            FoodProt = 21
                        },
                        new
                        {
                            FoodID = 25,
                            CategoryId = 12,
                            FoodCal = 207.0,
                            FoodCarb = 2,
                            FoodFat = 21,
                            FoodName = "Olive",
                            FoodProt = 2
                        },
                        new
                        {
                            FoodID = 26,
                            CategoryId = 13,
                            FoodCal = 256.0,
                            FoodCarb = 53,
                            FoodFat = 1,
                            FoodName = "Bread",
                            FoodProt = 8
                        },
                        new
                        {
                            FoodID = 27,
                            CategoryId = 13,
                            FoodCal = 216.0,
                            FoodCarb = 45,
                            FoodFat = 2,
                            FoodName = "Wholewheat Bread",
                            FoodProt = 6
                        });
                });

            modelBuilder.Entity("CalCalculatorEntities.FoodMeal", b =>
                {
                    b.Property<int>("MealID")
                        .HasColumnType("int");

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<double>("Grams")
                        .HasColumnType("float");

                    b.HasKey("MealID", "FoodID");

                    b.HasIndex("FoodID");

                    b.ToTable("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"), 1L, 1);

                    b.Property<int>("ContactUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("TotalCalorie")
                        .HasColumnType("float");

                    b.HasKey("MealID");

                    b.HasIndex("ContactUserID");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CalCalculatorEntities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("SecurityAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@",
                            IsAdmin = true,
                            Password = "admin",
                            SecurityAnswer = "adminSecurityAnswer",
                            SecurityQuestion = "adminSecurityQuestion",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("CalCalculatorEntities.Food", b =>
                {
                    b.HasOne("CalCalculatorEntities.Category", "Category")
                        .WithMany("Foods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CalCalculatorEntities.FoodMeal", b =>
                {
                    b.HasOne("CalCalculatorEntities.Food", "Food")
                        .WithMany("FoodMeals")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalCalculatorEntities.Meal", "Meal")
                        .WithMany("FoodMeals")
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.HasOne("CalCalculatorEntities.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("ContactUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CalCalculatorEntities.Category", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("CalCalculatorEntities.Food", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.Meal", b =>
                {
                    b.Navigation("FoodMeals");
                });

            modelBuilder.Entity("CalCalculatorEntities.User", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
